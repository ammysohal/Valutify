/**
 * @fileOverview Firestore Security Rules for Minecraft Account Management.
 *
 * Core Philosophy:
 * This ruleset enforces a role-based access control model where authenticated users are treated as administrators with full CRUD access to Minecraft accounts and LinkPays transactions.
 *
 * Data Structure:
 * - /minecraft_accounts/{accountId}: Stores Minecraft account details. Readable by anyone; writeable by authenticated admins only.
 * - /minecraft_accounts/{accountId}/linkpays_transactions/{transactionId}: Stores LinkPays transactions. Only accessible by authenticated admins.
 *
 * Key Security Decisions:
 * - Authenticated users are considered administrators with full CRUD access.
 * - Public read access is granted to /minecraft_accounts/{accountId} to facilitate the claim page.
 * - Listing of accounts and transactions is allowed for authenticated admins.
 *
 * Denormalization for Authorization:
 *  - The current model assumes all authenticated users are admins. No denormalization is required.
 * Structural Segregation:
 *  - Separate collections are used for accounts and transactions to simplify security rules.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Manages Minecraft account details.
     * @path /minecraft_accounts/{accountId}
     * @allow (get, list): Anyone can read account details.
     * @allow (create, update, delete): Only authenticated admins can manage accounts.
     * @deny (create, update, delete): Unauthenticated users cannot manage accounts.
     * @principle Allows public read access for claim page functionality, while restricting writes to admins.
     */
    match /minecraft_accounts/{accountId} {
      allow get, list: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && resource != null;
      allow delete: if isSignedIn() && resource != null;
    }

    /**
     * @description Manages LinkPays transaction details associated with a Minecraft account.
     * @path /minecraft_accounts/{accountId}/linkpays_transactions/{transactionId}
     * @allow (get, list, create, update, delete): Only authenticated admins can manage transactions.
     * @deny (get, list, create, update, delete): Unauthenticated users cannot manage transactions.
     * @principle Restricts all access to LinkPays transactions to admins.
     */
    match /minecraft_accounts/{accountId}/linkpays_transactions/{transactionId} {
      allow get, list, create, update, delete: if isSignedIn() && resource != null;
    }

    // Helper function to check if a user is signed in.
    function isSignedIn() {
      return request.auth != null;
    }
  }
}